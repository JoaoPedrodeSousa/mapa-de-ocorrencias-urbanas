"""empty message

Revision ID: b1c52d80b46e
Revises: 6cfeba3285e0
Create Date: 2025-04-11 13:14:49.783478

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2

# revision identifiers, used by Alembic.
revision = 'b1c52d80b46e'
down_revision = '6cfeba3285e0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categoria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ocorrencias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('categoria_id', sa.SmallInteger(), nullable=False),
    sa.Column('descricao', sa.String(length=125), nullable=True),
    sa.Column('data_registro', sa.DateTime(), nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['categoria.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('limites_df',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='limites_df_pkey')
    )
    op.drop_table('tb_ocorrencias')
    op.drop_table('tb_categoria')
    with op.batch_alter_table('ocorrencias', schema=None) as batch_op:
        batch_op.create_index('index_ocorrencias_geom', ['geom'], unique=False, postgresql_using='gist')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tb_limites_df')
    op.drop_table('limites_df')
    op.create_table('limites_df',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True)
    )
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    op.create_table('tb_categoria',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tb_categoria_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tb_categoria_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tb_ocorrencias',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('categoria_id', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('descricao', sa.VARCHAR(length=125), autoincrement=False, nullable=True),
    sa.Column('data_registro', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['tb_categoria.id'], name='tb_ocorrencias_categoria_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tb_ocorrencias_pkey')
    )
    with op.batch_alter_table('tb_ocorrencias', schema=None) as batch_op:
        batch_op.create_index('idx_tb_ocorrencias_geom', ['geom'], unique=False, postgresql_using='gist')

    with op.batch_alter_table('ocorrencias', schema=None) as batch_op:
        batch_op.drop_index('idx_ocorrencias_geom', postgresql_using='gist')

    op.drop_table('ocorrencias')
    op.drop_table('categoria')
    # ### end Alembic commands ###
